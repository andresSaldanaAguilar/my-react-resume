{"version":3,"sources":["MainResumePage.js","spanishBundle.js","englishBundle.js","App.js","serviceWorker.js","index.js"],"names":["MainResumePage","classes","this","props","Typography","color","variant","gutterBottom","language","degree","contact","header","content","map","link","Grid","container","item","xs","icon","Link","href","description","about","component","class","role","emoji","name","thesis","title","experience","Chip","style","fontWeight","label","date","tasks","task","clients","skills","List","category","ListItem","className","root","ListItemIcon","ListItemText","primary","rows","row","button","key","value","Divider","certifications","certification","hobbies","hobby","React","Component","withStyles","theme","justifyContent","backgroundColor","spanishBundle","englishBundle","AntSwitch","width","height","padding","display","switchBase","palette","grey","transform","common","white","opacity","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","Switch","App","state","themeType","toggleTheme","bind","toggleLanguage","setState","e","target","createMuiTheme","500","secondary","type","ThemeProvider","CssBaseline","sm","md","lg","xl","justify","paddingLeft","paddingRight","paddingTop","paddingBottom","spacing","alignItems","borderBottom","fontSize","marginRight","onClick","FormControl","InputLabel","htmlFor","Select","native","onChange","inputProps","id","borderTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ccd77cd8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MainResumePage.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    justifyContent: 'center',\r\n    backgroundColor: \"#26a69a\"\r\n  },\r\n});\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nclass MainResumePage extends React.Component {\r\n  \r\n  render(){\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Typography color=\"dark\" variant=\"h2\">Andrés Arnulfo Saldaña Aguilar</Typography>\r\n        <Typography variant=\"h5\" color=\"primary\" gutterBottom>{this.props.language.degree}</Typography>\r\n        <p></p>\r\n        <Typography variant=\"h4\" gutterBottom>{this.props.language.contact.header}</Typography>\r\n        {this.props.language.contact.content.map((link) => {\r\n          return(\r\n            <Grid container>\r\n              <Grid item xs={2}>\r\n                {link.icon}\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <Typography><Link variant=\"h7\" href={link.link}>{link.description}</Link></Typography>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        )}\r\n      \r\n        <p></p>\r\n        \r\n        <Typography variant=\"h4\" gutterBottom>{this.props.language.about.header}</Typography>\r\n        {this.props.language.about.content.map((item) => {\r\n          return(\r\n          <Typography component=\"h2\" gutterBottom><span class=\"emoji\" role=\"img\">{item.emoji}</span>{item.name}</Typography>\r\n          )}\r\n        )}\r\n\r\n        <p></p>\r\n\r\n        <Typography variant=\"h4\" gutterBottom>{this.props.language.thesis.header}</Typography>\r\n        <Typography variant=\"h5\" component=\"h4\" gutterBottom color=\"primary\">{this.props.language.thesis.content.title}</Typography>\r\n        <Typography component=\"p\" gutterBottom>\r\n            {this.props.language.thesis.content.description}\r\n        </Typography>\r\n        \r\n        <p></p>\r\n\r\n        <Typography variant=\"h4\" gutterBottom>{this.props.language.experience.header}</Typography>\r\n        {this.props.language.experience.content.map((item) => {\r\n          return(\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h4\" gutterBottom color=\"primary\">{item.header} <Chip style={{color:\"#fff\",fontWeight:400}} color=\"secondary\" label={item.date}/></Typography>\r\n              <ul>\r\n                {item.tasks.map((task) => {return(<li>{task}</li>);})}\r\n                <li>Clients : {item.clients}</li>\r\n              </ul>\r\n            </div>\r\n          );\r\n        })}\r\n        \r\n        <p></p>\r\n\r\n        <Typography variant=\"h4\" gutterBottom>{this.props.language.skills.header}</Typography>\r\n        \r\n        <List component=\"nav\">\r\n          {this.props.language.skills.content.map((category) => {\r\n            return(\r\n              <div>\r\n                <ListItem className={classes.root} >\r\n                  <ListItemIcon>\r\n                    <StarIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={category.label} />\r\n                </ListItem>\r\n                {category.rows.map((row) => {\r\n                  return (\r\n                    <div>\r\n                      <ListItem button>\r\n                      <ListItemIcon >\r\n                        <LabelImportantIcon color=\"primary\" />\r\n                      </ListItemIcon >\r\n                      <ListItemText primary={row.key+\": \"+row.value} />\r\n                      </ListItem>\r\n                      <Divider ></Divider>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              );\r\n          })}\r\n        </List>\r\n            \r\n        <p></p>\r\n\r\n        <Typography variant=\"h4\" gutterBottom>{this.props.language.certifications.header}</Typography>\r\n        {this.props.language.certifications.content.map((certification) => {\r\n        return(\r\n          <Typography component=\"h2\" color=\"primary\" gutterBottom> {certification.title} : {certification.description}</Typography>\r\n        )}\r\n        )}\r\n\r\n        <p></p>\r\n\r\n        <Typography variant=\"h4\" gutterBottom>{this.props.language.hobbies.header}</Typography>\r\n        {this.props.language.hobbies.content.map((hobby) => {\r\n          return(\r\n            <Typography component=\"h2\" gutterBottom> <span class=\"emoji\" role=\"img\">{hobby.emoji}</span>{hobby.name}</Typography>\r\n          )}\r\n        )}\r\n\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withStyles(useStyles)(MainResumePage);","import React from 'react';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\n\r\nconst spanishBundle = {\r\n\r\n    degree: 'Ingeniero en Sistemas Computacionales',\r\n\r\n    contact : { header:\"Contacto\", content :[\r\n        { link: 'https://linkedin.com/in/andressaldanaaguilar', description: 'andressaldanaaguilar', icon: <LinkedInIcon ></LinkedInIcon> },\r\n        { link: 'https://github.com/andresSaldanaAguilar', description: 'andresSaldanaAguilar', icon: <GitHubIcon ></GitHubIcon> },\r\n        { link: 'mailto:andres.saldana.aguilar@gmail.com', description: 'andres.saldana.aguilar@gmail.com', icon: <MailIcon ></MailIcon> },\r\n        { link: '#', description: '(+52)5543890085', icon: <PhoneIcon ></PhoneIcon> }\r\n    ]},\r\n\r\n    about : { header:\"Acerca de mi\", content :[\r\n        { emoji: '👨‍💻', name: 'Ingeniero en Sistemas Computacionales desde el 2020' },\r\n        { emoji: '🏫', name: 'Escuela Superior de Cómputo IPN' },\r\n        { emoji: '✍', name: 'Promedio de 9.14/10.00' },\r\n        { emoji: '🎖️', name: 'Tésis con mención honorífica' }\r\n    ]},\r\n\r\n    experience : { header:\"Experiencia\", content :[\r\n        {\r\n            header: 'Rysh electronica S.A de C.V (Freelance) - Desarrollador Full-Stack y Analista', date: 'Nov 2017 - Jul 2018',\r\n            description: 'Análisis, diseño e implementación de una plataforma web para la empresa Rysh Electrónica SA de CV. Acortando los tiempos de reporte y reducción de paros en la operación de los trenes. Trabajamos bajo la metodología ágil SCRUM para su desarrollo.',\r\n            clients: 'Clientes: Ferromex'\r\n        },\r\n        {\r\n            header: 'E-Global - Becario Desarrollador Backend ', date: 'Ago 2019 - Nov 2019',\r\n            description: 'Desarrollo de servicios web REST para la autorización, almacenamiento y autenticación de transacciones bancarias para Bancomer con el uso de Spring Boot, migración de servicios de Java Enterprise Edition  a Spring Boot, E-Global es una cámara de compensación.',\r\n            clients: 'Clientes: BBVA Bancomer, BanCoppel'\r\n        },\r\n        {\r\n            header: 'ThinkSkink - Ingeniero de Software Jr', date: 'Dic 2019 - Presente',\r\n            description: 'Diseño y desarrollo de nuevas funcionalidades backend y frontend para el orquestamiento de flujos de negocio.',\r\n            clients: 'Clientes: Telcel, Wom Chile, Nextel y Claro Perú'\r\n        },\r\n    ]},\r\n\r\n    skills : { header:\"Habilidaddes Técnicas\", content :[\r\n        {\r\n            label: \"Languages\",\r\n            rows: [\r\n                { key: 'Java', value: '4 años' },\r\n                { key: 'Python', value: '2 años' },\r\n                { key: 'Android', value: '2 años' },\r\n                { key: 'JavaScript', value: '3 años' }\r\n            ]\r\n        }\r\n        ,\r\n        {\r\n            label: \"Databases\",\r\n            rows: [\r\n                { key: 'MySQL', value: '4 años' },\r\n                { key: 'OracleDB', value: '1 año' },\r\n                { key: 'Postgres', value: '1 año' },\r\n                { key: 'MongoDB', value: '< 1 año' }\r\n            ]\r\n        }\r\n        ,\r\n        {\r\n            label: \"Test Frameworks\",\r\n            rows: [\r\n                { key: 'JUnit', value: '< 1 año' },\r\n                { key: 'Selenium', value: '< 1 año' }\r\n            ]\r\n        }\r\n        ,\r\n        {\r\n            label: \"Technologies\",\r\n            rows: [\r\n                { key: 'Spring Boot', value: '1 año' },\r\n                { key: 'Spring MVC', value: '< 1 año' },\r\n                { key: 'AngularJS', value: '< 1 año' },\r\n                { key: 'React', value: '< 1 año' },\r\n                { key: 'JQuery', value: '2 años' },\r\n                { key: 'Maven', value: '1 año' },\r\n                { key: 'Git', value: '3 años' }\r\n            ]\r\n        }\r\n    ]},\r\n\r\n    \r\n    thesis : { header:\"Tésis\", content : {\r\n        title: 'Monitoreo de producción de energía en tiempo real',\r\n        description: 'En colaboración con mis compañeros de tesis desarrollamos un sistema con capacidades para monitorear la producción de energía generada desde distintas fuentes y alertar anomalías de manera remota mediante una aplicación móvil. La lógica estaba contenida en un servidor embebido, el procesamiento, tratamiento y envió de datos se realizó con un microcontrolador.'\r\n    }},\r\n    \r\n    certifications : { header:\"Certificaciones\", \r\n        content : [\r\n            {   \r\n                title: 'Curso',\r\n                description: 'IBM Global Bussines, GBS Academy: Microservicios'\r\n            },\r\n            {   \r\n                title: 'Certificación',\r\n                description: 'SCRUMstudy : Scrum Fundamentals,  ID de la credencial: 737953'\r\n            }\r\n        ]\r\n    },\r\n\r\n    hobbies : { header:\"Pasatiempos\", content :[\r\n        { emoji: '♟️', name: 'Ajedrez' },\r\n        { emoji: '📷', name: 'Fotografía' },\r\n        { emoji: '🎨', name: 'Dibujar, Pintura' },\r\n        { emoji: '💻💖', name: 'Los sistemas' }\r\n    ]}\r\n}\r\n\r\nexport default spanishBundle;","import React from 'react';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n\r\nconst englishBundle = {\r\n\r\n    degree: 'Software Engineer',\r\n\r\n    contact : { header:\"Contact\", content :[\r\n        { link: 'https://linkedin.com/in/andressaldanaaguilar', description: 'LinkedIn', icon: <LinkedInIcon ></LinkedInIcon> },\r\n        { link: 'https://app.codesignal.com/profile/andressaldan', description: 'Code Signal', icon: <CodeIcon ></CodeIcon> },\r\n        { link: 'https://github.com/andresSaldanaAguilar', description: 'GitHub', icon: <GitHubIcon ></GitHubIcon> },\r\n        { link: 'mailto:andres.saldana.aguilar@gmail.com', description: 'andres.saldana.aguilar@gmail.com', icon: <MailIcon ></MailIcon> },\r\n        { link: '#', description: '(+52)5543890085', icon: <PhoneIcon ></PhoneIcon> }\r\n    ]},\r\n\r\n    about : { header:\"About\", content :[\r\n        { emoji: '👨‍💻', name: 'Computer Systems Engineer since 2020' },\r\n        { emoji: '🏫', name: 'Escuela Superior de Cómputo IPN' },\r\n        { emoji: '✍', name: '9.14/10.00 GPA' },\r\n        { emoji: '🎖️', name: 'Honorable mention thesis' }\r\n    ]},\r\n\r\n    experience : { header:\"Experience\", content :[\r\n        {\r\n            header: '‍Rysh electronica S.A de C.V (Freelance) - Full-Stack developer and analyst', date: 'Nov 2017 - Jul 2018',\r\n            tasks: [\r\n                'This small project was all made by my sister and I, for train stoplights problem report.',\r\n                'Requirement and use case analysis and design.','Developing of REST controllers, views and models.',\r\n                'Backend and frontend were developed with Laravel framework, MariaDB storage and deployed on a Google Cloud CentOS server.'\r\n            ],\r\n            clients: 'Ferromex'\r\n        },\r\n        {\r\n            header: 'E-Global Software Developer Intern', date: 'Aug 2019 - Nov 2019',\r\n            tasks: [\r\n                'Service Migration from Java EE to Spring Boot for banking transaction, authentication, storage and authorization.',\r\n                'PostgresDB usage.',\r\n            ],\r\n            clients: 'BBVA Bancomer, BanCoppel.'\r\n        },\r\n        {\r\n            header: 'ThinkSkink - Software Engineer Jr', date: 'Dec 2019 - Present',\r\n            tasks: [\r\n                'Developing features with Spring Framework and Java 8.',\r\n                'Developing of user interfaces with AngularJS and React components.',\r\n                'Testing with Selenium and Junit.',\r\n                'SOAP and REST services definition and creation.',\r\n                'Code Refactoring and Clean Coding.',\r\n                'Customizing our product for clients.',\r\n                'OracleDB and PostgresDB usage.',\r\n            ],\r\n            clients: 'Telcel México, WOM Chile and Claro Perú'\r\n        },\r\n    ]},\r\n\r\n    skills : { header:\"Technical Skills\", content :[\r\n        {\r\n            label: \"Languages\",\r\n            rows: [\r\n                { key: 'Java', value: '4 years' },\r\n                { key: 'Python', value: '2 years' },\r\n                { key: 'Android', value: '2 years' },\r\n                { key: 'JavaScript', value: '3 years' }\r\n            ]\r\n        }\r\n        ,\r\n        {\r\n            label: \"Databases\",\r\n            rows: [\r\n                { key: 'MySQL', value: '4 years' },\r\n                { key: 'OracleDB', value: '1 year' },\r\n                { key: 'Postgres', value: '1 year' },\r\n                { key: 'MongoDB', value: '< 1 year' }\r\n            ]\r\n        }\r\n        ,\r\n        {\r\n            label: \"Test Frameworks\",\r\n            rows: [\r\n                { key: 'JUnit', value: '< 1 year' },\r\n                { key: 'Selenium', value: '< 1 year' }\r\n            ]\r\n        }\r\n        ,\r\n        {\r\n            label: \"Technologies\",\r\n            rows: [\r\n                { key: 'Spring Boot', value: '1 year' },\r\n                { key: 'Spring MVC', value: '< 1 year' },\r\n                { key: 'React', value: '< 1 year' },\r\n                { key: 'JQuery', value: '2 years' },\r\n                { key: 'Maven', value: '1 year' },\r\n                { key: 'AngularJS', value: '< 1 year' },\r\n                { key: 'Git', value: '3 years' }\r\n            ]\r\n        }\r\n    ]},\r\n\r\n    \r\n    thesis :  { header:\"Thesis\", content : {\r\n        title: 'Real time energy production monitoring',\r\n        description: 'Capable of energy production monitoring on real time from various sources (nodes), notifying production problems and displaying data on a mobile application. Logic was contained on a raspberry pi 3 Linux server, data was stored in a document-oriented database, processing and signal treatment was handled by a microcontroller.'\r\n    }},\r\n\r\n    hobbies : { header:\"Likes\", content :[\r\n        { emoji: '♟️', name: 'Chess' },\r\n        { emoji: '📷', name: 'Photography' },\r\n        { emoji: '🎨', name: 'Arts' },\r\n        { emoji: '💻💖', name: 'And of course, Coding' }\r\n    ]},\r\n\r\n    certifications : { header:\"Certifications\", \r\n        content : [\r\n            {   \r\n                title: 'Course',\r\n                description: 'IBM Global Bussines, GBS Academy: Microservices '\r\n            },\r\n            {   \r\n                title: 'Certification',\r\n                description: 'SCRUMstudy : Scrum Fundamentals,  Credential ID: 737953 '\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nexport default englishBundle;","import React from 'react';\nimport MainResumePage from './MainResumePage';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport { createMuiTheme }  from '@material-ui/core/styles'\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport spanishBundle from './spanishBundle';\nimport englishBundle from './englishBundle';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport Link from '@material-ui/core/Link';\n\n/*imported from material UI webpage*/\nconst AntSwitch = withStyles((theme) => ({\n  root: {\n    width: 60,\n    height: 36,\n    padding: 0,\n    display: 'flex',\n  },\n  switchBase: {\n    padding: 3,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(24px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n  thumb: {\n    width: 30,\n    height: 30,\n    boxShadow: 'none',\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 36 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white,\n  },\n  checked: {},\n}))(Switch);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {themeType :'light',language:\"en\"};\n    this.toggleTheme = this.toggleTheme.bind(this);\n    this.toggleLanguage = this.toggleLanguage.bind(this);\n  }\n\n  toggleTheme() {\n    this.setState({\n      themeType : this.state.themeType === 'light' ? 'dark' : 'light'   \n    });\n  }\n\n  toggleLanguage(e) {\n    this.setState({\n      language : e.target.value\n    });\n  }\n  \n  render() {\n\n    let theme = createMuiTheme({\n      palette: {\n        primary: this.state.themeType === \"light\" ? {500:\"#26a69a\"} : {\"500\":\"#82e9de\"},\n        secondary: this.state.themeType === \"light\" ? {\"A400\":\"#8eacbb\"} : {\"A400\" :\"#90a4ae\"},\n        type: this.state.themeType\n      }\n    })\n\n    return( \n      <div>\n        <ThemeProvider theme={theme}>\n          <CssBaseline/>\n          <Grid container>\n            <Grid item xs={0} sm={0} md={2} lg={2} xl={2}>\n            </Grid>\n            <Grid item justify xs={12} sm={12} md={8} lg={8} xl={8} >\n              <Grid style={{paddingLeft:40,paddingRight:40,paddingTop:25,paddingBottom:15}}>\n              \n                <Grid container spacing={1}  justify=\"space-between\" alignItems=\"center\" style={{borderBottom: \"0.3px solid\",paddingBottom:\"10px\"}}>\n                  <Grid item>\n                    <Grid  container justify=\"space-between\" alignItems=\"center\">\n                      <InvertColorsIcon fontSize=\"large\" style={{marginRight:10}}/>\n                      <AntSwitch onClick={this.toggleTheme} />\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Grid  container justify=\"space-between\" alignItems=\"center\">\n                      <TranslateIcon fontSize=\"large\" style={{marginRight:15}}/>\n                      <FormControl variant=\"outlined\">\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">Language</InputLabel>\n                        <Select\n                          native\n                          value={this.state.language}\n                          onChange={this.toggleLanguage}\n                          label=\"Language\"\n                          inputProps={{\n                            name: 'age',\n                            id: 'outlined-age-native-simple',\n                          }}\n                        >\n                          <option value={\"en\"}>English</option>\n                          <option value={\"es\"}>Spanish</option>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <p></p>\n\n                <MainResumePage language={this.state.language === 'es' ? spanishBundle : englishBundle}/>\n\n                <Grid item><Typography style={{borderTop: \"0.3px solid\",paddingTop:\"10px\",fontSize:10}} >Author: Andres Saldaña Aguilar 2020  -- <Link href=\"https://github.com/andresSaldanaAguilar/my-react-resume\">Source: https://github.com/andresSaldanaAguilar/my-react-resume</Link></Typography></Grid>\n\n              </Grid>\n            </Grid>\n          </Grid>\n        </ThemeProvider>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}